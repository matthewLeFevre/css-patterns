{"version":3,"sources":["base/_reset.scss","base/_variables.scss","utilities/_color.scss","utilities/_mixins.scss","utilities/_sizes.scss","layout/_grid.scss","components/_forms.scss","components/_alerts.scss","components/_buttons.scss","components/_item_cards.scss","components/_modals.scss","components/_code.scss"],"names":[],"mappings":"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ACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,oBAHE,EAIL;;AAFD;EACI,qBAHE,EAIL;;AAFD;EACI,qBAHE,EAIL;;AAFD;EACI,qBAHE,EAIL;;AFlCR;EE6CmB;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL,EAAA;;AF/CpB;EE6CmB;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL,EAAA;;AF/CpB;EE6CmB;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL;EAFD;IACI,qBAHE,EAIL,EAAA;;AF/CpB;EE6CmB;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IACI,oBAHE,EAIL;EAFD;IA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B;IAAU,cAAa,EAAE;EAIxB;IACC,uBPtBc;IOuBd,sBPrBe;IOsBf,ePtBe,EOuBf;EAIF;IACC,uBP9Be;IO+Bf,sBP7BgB;IO8BhB,eP9BgB,EOsChB;IALC;MACC,0BPlCc;MOmCd,YPrCa,EOsCb;EAOF;IAGE,YAAW;IACX,eAAc;IACd,gBAAe,EAUhB;EAfD;IAOE,eAAc,EAQf;EAfD;IASE,eAAc;IACd,oBAAmB,EAKpB;EAfD;IAYE,mBAAkB,EAGnB;EAMD;IACC,0BPhEe;IOiEf,sBPjEe;IOkEf,YPrEc,EO2Fd;IAnBC;MACC,uBPzEY;MO0EZ,ePvEa;MOwEb,sBPxEa,EOyEb;IAGF;MACC,uBPhFa;MOiFb,eP9Ec,EOuFd;MANC;QACC,0BPlFY;QOmFZ,YPtFW;QOuFX,sBPpFY,EOqFZ;EAtBJ;IACC,0BP/De;IOgEf,sBPhEe;IOiEf,YPrEc,EO2Fd;IAnBC;MACC,uBPzEY;MO0EZ,ePtEa;MOuEb,sBPvEa,EOwEb;IAGF;MACC,uBPhFa;MOiFb,eP7Ec,EOsFd;MANC;QACC,0BPjFY;QOkFZ,YPtFW;QOuFX,sBPnFY,EOoFZ;EAtBJ;IACC,0BP/De;IOgEf,sBPhEe;IOiEf,YPrEc,EO2Fd;IAnBC;MACC,uBPzEY;MO0EZ,ePtEa;MOuEb,sBPvEa,EOwEb;IAGF;MACC,uBPhFa;MOiFb,eP7Ec,EOsFd;MANC;QACC,0BPjFY;QOkFZ,YPtFW;QOuFX,sBPnFY,EOoFZ;EAtBJ;IACC,0BP7Dc;IO8Dd,sBP9Dc;IO+Dd,YPrEc,EO2Fd;IAnBC;MACC,uBPzEY;MO0EZ,ePpEY;MOqEZ,sBPrEY,EOsEZ;IAGF;MACC,uBPhFa;MOiFb,eP3Ea,EOoFb;MANC;QACC,0BP/EW;QOgFX,YPtFW;QOuFX,sBPjFW,EOkFX;EAtBJ;IACC,0BP9DgB;IO+DhB,sBP/DgB;IOgEhB,YPrEc,EO2Fd;IAnBC;MACC,uBPzEY;MO0EZ,ePrEc;MOsEd,sBPtEc,EOuEd;IAGF;MACC,uBPhFa;MOiFb,eP5Ee,EOqFf;MANC;QACC,0BPhFa;QOiFb,YPtFW;QOuFX,sBPlFa,EOmFb;EAtBJ;IACC,0BPhEe;IOi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","file":"../../main.css","sourcesContent":["*,\r\n*::before,\r\n*::after {\r\n\tbox-sizing: border-box;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\nbody {\r\n\tfont-family: $main-font;\r\n\tfont-weight: 400;\r\n\tfont-size: 16px;\r\n\tline-height: 1.7;\r\n}","\r\n// Color\r\n\r\n$white:    \t\t#fff;\r\n$black:    \t\t#000;\r\n$grey: \t\t\t\t#697479;\r\n$blue: \t\t\t\t#084887;\r\n$green: \t\t\t#56BF00;\r\n$yellow: \t\t\t#FFCC42;\r\n$red: \t\t\t\t#D33115;\r\n$purple:\t\t\t#5F0F40;\r\n\r\n$grey-100: \t\t#C3C7C9;\r\n$grey-150:\t\t#CCC;\r\n$grey-200: \t\t#91999D;\r\n$grey-300: \t\t#697479;\r\n$grey-400: \t\t#5A676C;\r\n$grey-500: \t\t#4A585E;\r\n\r\n$colors: (\r\n\t\"grey\": \t$grey,\r\n\t\"blue\": \t$blue,\r\n\t\"green\": \t$green,\r\n\t\"yellow\":\t$yellow,\r\n\t\"red\":\t\t$red,\r\n\t\"purple\": $purple,\r\n\t\"white\":  $white,\r\n\t\"black\":  $black\r\n);\r\n\r\n// Semi Transparent Colors\r\n\r\n$semiTrans: rgba(0,0,0,.65);\r\n\r\n// Button colors\r\n\r\n$btn-colors: (\r\n\t\"primary\": \t$blue,\r\n\t\"secondary\":$green,\r\n\t\"success\": \t$green,\r\n\t\"danger\": \t$red,\r\n\t\"warning\": \t$yellow,\r\n\t\"action\": \t$blue,\r\n);\r\n\r\n// Typography\r\n\r\n$main-font:   sans-serif;\r\n$accent: \t\t\tserif;\r\n$document:\t\tserif;\r\n\r\n// Recommended sizes\r\n\r\n$tiny: \t\t\t\t.75em;\r\n$sml:  \t\t\t\t.90em;\r\n$initial: \t\t\t1em;\r\n$main: \t\t\t\t1.125em;\r\n$mid:  \t\t\t\t1.25em;\r\n$mdm:  \t\t\t\t1.6em;\r\n$mod:  \t\t\t\t1.9em;\r\n$lrg:  \t\t\t\t2.5em;\r\n\r\n$sizes: (\r\n\t\"tiny\": \t$tiny,\r\n\t\"sml\": \t\t$sml,\r\n\t\"initial\":$initial,\r\n\t\"main\": \t$main,\r\n\t\"mid\": \t\t$mid,\r\n\t\"mdm\": \t\t$mdm,\r\n\t\"mod\": \t\t$mod,\r\n\t\"lrg\": \t\t$lrg,\r\n);\r\n\r\n// Border Radius\r\n\r\n$br: \t .25em;\r\n\r\n// Box Shadow\r\n\r\n$box-shadow1: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n$box-shadow2: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\r\n$box-shadow3: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\r\n$box-shadow4: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n$box-shadow5: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);\r\n\r\n// Breakpoints\r\n\r\n$bp-tiny: 40em;\r\n$bp-sml:  48em;\r\n$bp-mdm:  62.5em;\r\n$bp-lrg:  75em;\r\n\r\n$break-points: (\r\n\t\"tiny\": $bp-tiny,\r\n\t\"sml\":  $bp-sml,\r\n\t\"mdm\":  $bp-mdm,\r\n\t\"lrg\":  $bp-lrg\r\n);\r\n\r\n// z-index\r\n$z-0: 0;\r\n$z-05: 5;\r\n$z-1: 10;\r\n$z-2: 20;\r\n$z-3: 30;\r\n$z-4: 40;\r\n$z-5: 50;\r\n\r\n// Grid \r\n\r\n$columns: 12;\r\n$limited-grid-size: 75em;\r\n$padded-grid-padding: .75em;\r\n\r\n// button types\r\n\r\n$btn-types: \"full\" \"icon\" \"round\" \"long\";\r\n\r\n// Panel types\r\n\r\n$panel-types: \"basic\" \"responsive\";","// Premade classes for color\r\n//\r\n// It is best to assign color to an elements\r\n// main class instead of adding a large amount\r\n// of classes to the html element code\r\n// these classes can help you prototype look\r\n// and feel fast. To add your own style guide\r\n// colors to these classes add them to the \r\n// _variables.scss partial under the \r\n// colors list\r\n\r\n@each $color, $value in $colors {\r\n\r\n\t// Background Color\r\n\r\n\t.bg-#{$color} {\r\n\t\t@include background($value);\r\n\t}\r\n\r\n\t// Text color\r\n\r\n\t.txt-#{$color} {\r\n\t\tcolor: $value;\r\n\t}\r\n}\r\n","// Media Query Breakpoints\r\n\r\n// Generic custom breakpoint mixin\r\n// \r\n// Makes life really easy but it does spam\r\n// media queries in the library which adds to\r\n// dozens if not hundreds of lines of repeated code\r\n\r\n@mixin bp($bp) {\r\n\t@media only screen and (min-width: $bp) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n\r\n// Specific breakpoint mixins\r\n//\r\n// Shorthand for the above mixin\r\n// does not solve the problem of spamming \r\n// media queries\r\n\r\n@mixin bp-tiny ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-tiny) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-sml ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-sml) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-mdm ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-mdm) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-lrg ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-lrg) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// transitions\r\n//\r\n// Customizable transition mixin\r\n// by specifying the effect of the transition\r\n// it may improve performace in css\r\n// the preformance improvement may not make \r\n// a difference though\r\n\r\n@mixin transition($effect: all, $time: 300ms, $easing: ease-in-out) {\r\n\ttransition: $effect $time $easing;\r\n}\r\n\r\n// background colors\r\n// set the background and hover colors of an element \r\n// in one mixin\r\n@mixin background($color, $hover: \"null\") {\r\n\t\r\n\tbackground-color: $color;\r\n\t\r\n\t@if $hover != \"null\" {\r\n\t\t\r\n\t\t@include transition(background-color);\r\n\t\t\r\n\t\t&:hover {\r\n\t\t\tbackground-color: $hover;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Flex mixins\r\n//\r\n// Works for most situations for using flexbox\r\n\r\n@mixin flex ($orientation: row, \r\n\t\t\t $wrap: nowrap,\r\n\t\t\t $justify: space-around, \r\n\t\t\t $align: flex-start) {\r\n\tdisplay: flex;\r\n\tflex-flow: $orientation $wrap;\r\n\tjustify-content: $justify;\r\n\talign-items: $align;\r\n}\r\n\r\n\r\n\r\n// Css Grid Mixins\r\n//\r\n// Standard grid mixins used in all of css-pattern\r\n// grid classes\r\n\r\n@mixin grid($type: \"grid\", \r\n\t\t\t$limit: $limited-grid-size, \r\n\t\t\t$pad: $padded-grid-padding) {\r\n    display: grid;\r\n    grid-template-columns: repeat($columns, 1fr);\r\n\tgrid-auto-rows: minmax(50px, auto);\r\n    margin: 0 auto;\r\n    @if $type == \"grid--padded\" {\r\n        grid-gap: $pad;\r\n    } @else if $type == \"grid--limited\" {\r\n        max-width: $limit;\r\n    } @else if $type == \"grid--limited-padded\" {\r\n        grid-gap: $pad;\r\n        max-width: $limit;\r\n    } @else if $type == \"grid--nested\" {\r\n\t\tmargin: 0;\r\n\t} @else if $type == \"grid--nested--padded\" {\r\n\t\tgrid-gap: $pad;\r\n\t\tmargin: 0;\r\n\t}\r\n}\r\n\r\n// Extend css-patterns grid \r\n\r\n// Use this mixin to create your own custom\r\n// grid classes\r\n// *Grid columns will always have equal widths \r\n// filling the space given to them\r\n\r\n@mixin custom-grid($type: \"grid\", \r\n\t\t\t\t   $columns: 12, \r\n\t\t\t\t   $limit: $limited-grid-size, \r\n\t\t\t\t   $pad: $padded-grid-padding) {\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat($columns, 1fr);\r\n\tgrid-auto-rows: minmax(50px, auto);\r\n\tmargin: 0 auto;\r\n\t@if $type == \"grid--padded\" {\r\n\t\tgrid-gap: $pad;\r\n\t} @else if $type == \"grid--limited\" {\r\n\t\tmax-width: $limit;\r\n\t} @else if $type == \"grid--limited-padded\" {\r\n\t\tgrid-gap: $pad;\r\n\t\tmax-width: $limit;\r\n\t}\t\r\n}\r\n\r\n\r\n\r\n// Image mixins and extend templates\r\n// \r\n// Since we have mixins that don't require\r\n// any perameters it may be more preformant\r\n// to user '@extend' instead on '@include'\r\n// for these one off mixins. Compiled css\r\n// may be lessened significantly if '@extend'\r\n// is used on classes requiring the styles\r\n\r\n// '@extend' templates\r\n\r\n%img {\r\n\tvertical-align: center;\r\n\tborder: 0;\r\n}\r\n\r\n%img--responsive {\r\n\tmax-width: 100%;\r\n\t@extend %img;\r\n}\r\n\r\n// Image mixins\r\n\r\n@mixin img() {\r\n\tvertical-align: center;\r\n\tborder: 0;\r\n}\r\n\r\n@mixin img--responsive($max-width: 100%) {\r\n\tmax-width: $max-width;\r\n\t@include img;\r\n}\r\n\r\n\r\n\r\n// Panel Mixins\r\n\r\n@mixin panel($type) {\r\n\t@if $type == \"basic\" {\r\n\t\tdisplay: flex;\r\n\t\tflex-flow: column nowrap;\r\n\t\tmargin: 1em auto;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #000;\r\n\t\twidth: 230px;\r\n\t\theight: 300px;\r\n\t\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 3px rgba(0,0,0,0.15);\r\n\t\tpadding: 0;\r\n\t\t@include bp-tiny() {\r\n\t\t\tmargin: 1em .5em;\r\n\t\t}\r\n\r\n\t\t& > .panel--img--wrap {\r\n\t\t\tmin-width: 100%;\r\n\t\t\tmax-width: 100%;\r\n\t\t\tmax-height: 130px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t} @else if $type == \"responsive\" {\r\n\t\tdisplay: flex;\r\n\t\tborder-bottom: 2px solid rgba(0,0,0,.5);\r\n\t\tpadding-bottom: .5em;\r\n\t\tmargin: 1em .5em;\r\n\t\theight: auto;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #000;\r\n\t\t@include bp ($bp-tiny) {\r\n\t\t\twidth: 230px;\r\n\t\t\theight: 300px;\r\n\t\t\tdisplay: block;\r\n\t\t\tborder-bottom: none;\r\n\t\t\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 3px rgba(0,0,0,0.15);\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t}\r\n}","// font size class generation\r\n//\r\n// As always it is best to assign the \r\n// size of your text in the elements\r\n// main class but if you need to quickly\r\n// prototype then having classes\r\n// for text size may come in handy\r\n\r\n@each $size, $value in $sizes {\r\n\t.#{$size} {\r\n\t\tfont-size: $value ;\r\n\t}\r\n}","// the grid class and its variants can work as individual rows or if columns are configured\r\n// in such a way one grid can represent multiple rows\r\n\r\n.grid { @include grid;}\r\n@each $size, $break in $break-points {\r\n    .grid--#{$size} {\r\n        @include bp($break) {\r\n            @include grid; \r\n        }\r\n    }\r\n}\r\n.grid--padded { @include grid(\"grid--padded\");}\r\n@each $size, $break in $break-points {\r\n    .grid--padded--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--padded\"); \r\n        }\r\n    }\r\n}\r\n.grid--limited { @include grid(\"grid--limited\");}\r\n@each $size, $break in $break-points {\r\n    .grid--limited--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--limited\"); \r\n        }\r\n    }\r\n}\r\n.grid--limited-padded { @include grid(\"grid--limited-padded\");}\r\n@each $size, $break in $break-points {\r\n    .grid--limited-padded--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--limited-padded\");\r\n        }\r\n    }\r\n}\r\n\r\n.grid--nested { @include grid(\"grid--nested\");}\r\n\r\n.col {\r\n    $column: 1;\r\n    @while $column <= $columns {\r\n        &--#{$column} {\r\n            grid-column: span $column;\r\n        }\r\n        $column: $column + 1;\r\n    }\r\n}\r\n\r\n.col {\r\n    @each $size, $bp in $break-points {\r\n        &--#{$size} {\r\n            @include bp($bp) {\r\n                $column: 1;\r\n                @while $column <= $columns {\r\n                    &--#{$column} {\r\n                        grid-column: span $column;\r\n                    }\r\n                    $column: $column + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.grid__image {\r\n    display: block;\r\n    width: 100%;\r\n}","@mixin form ($type, $limit: 300px, $padding: 25px) {\r\n    min-height: 50px;\r\n    min-width: 300px;\r\n    padding: $padding;\r\n    @if $type == \"form\" {\r\n        width: 100%;\r\n    } @else if $type == \"form--limited\" {\r\n        max-width: $limit;\r\n        margin: 0 auto;\r\n    } \r\n}\r\n\r\n.form {\r\n    @include form('form');\r\n}\r\n\r\n.form--no-padding {\r\n    @include form('form', 10px, 0);\r\n}\r\n\r\n.form--sml {\r\n    @include form('form--limited', 500px);\r\n}\r\n.form--lrg {\r\n    @include form('form--limited', 1000px);\r\n}\r\n.form__pair { margin: 1em 0; }\r\n.form__label { \r\n    display: block;\r\n    &.side {\r\n        display: inline-block;\r\n    }\r\n}\r\n.form__field {\r\n    border: 0;\r\n    padding: 1em;\r\n    &:focus {\r\n        outline-color: 0;\r\n    }\r\n    &.full {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n.input--text {\r\n    border: 0;\r\n    padding: .35em;\r\n    background-color: $white;\r\n    border:  $blue 1px solid;\r\n    border-radius: $br;\r\n    &:focus {\r\n        outline-color: 0;\r\n    }\r\n    &.full {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n    &.breath {\r\n        margin: .25em 0;\r\n    }\r\n}\r\n\r\n.input--radio__group {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.input--radio {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n}\r\n.input--radio:checked + .label--radio::before {\r\n    background-color: $black;\r\n}\r\n\r\n.input--radio__set {\r\n    padding: .5em;\r\n}\r\n.label--radio {\r\n    font-size: $main;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0;\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        height: $sml;\r\n        width: $sml;\r\n        border: $black 1px solid;\r\n        vertical-align: middle;\r\n        border-radius: 50%;\r\n        transition: background-color 200ms ease;\r\n    }\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        height: 11px;\r\n        width: 11px;\r\n        background-color: transparent;\r\n        border-radius: 50%;\r\n    }\r\n}\r\n.label--radio__text {\r\n    margin-bottom: .5em;\r\n    display: block;\r\n}\r\n\r\n.label--checkbox {\r\n    font-size: $main;\r\n    cursor: pointer;\r\n}\r\n\r\n.label--checkbox::before {\r\n    content: '';\r\n    display: inline-block;\r\n    height: $sml;\r\n    width: $sml;\r\n    border: $grey-500 1px solid;\r\n    margin: 0 .75em;\r\n    vertical-align: middle;\r\n    border-radius: 3px;\r\n    transition: background-color 200ms ease;\r\n}\r\n.input--checkbox { \r\n    visibility: hidden;\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n}\r\n.input--checkbox:checked + .label--checkbox::before {\r\n    background-color: $green;\r\n}\r\n\r\n","@mixin alert($type: \"\") {\r\n    position: fixed;\r\n    width: 80vw;\r\n    min-width: 300px;\r\n    padding: 1em;\r\n    top: 2em;\r\n    left: 10vw;\r\n    right: 10vw;\r\n    z-index: $z-5;\r\n    border-radius: $br;\r\n\r\n    .close {\r\n        display: none;\r\n        cursor:pointer;\r\n        color: $grey;\r\n        @include transition;\r\n        &:hover {\r\n            color: $black;\r\n        }\r\n    }\r\n    @if $type == 'closeable' {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        .close {\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    &.hide {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.alert {\r\n    @include alert;\r\n}\r\n\r\n.alert--closeable {\r\n    @include alert('closeable');\r\n}","// button\r\n\r\n@mixin btn() {\r\n\tmargin: .1em 0;\r\n\ttext-decoration: none;\r\n\tline-height: 1;\r\n\tpadding: .75em 1.75em;\r\n\twidth: auto;\r\n\tbackground-color: $grey;\r\n\tborder: .1em solid $grey;\r\n\tborder-radius: $br;\r\n\tfont-weight: 700;\r\n\tfont-family: $main-font;\r\n\tcolor: $white;\r\n\tdisplay: inline-block;\r\n\tcursor: pointer;\r\n\t@include transition(all, 200ms);\r\n\t\r\n\t&:hover {opacity: .7;}\r\n\r\n\t&.breath {margin: .25em}\r\n\r\n\t// More contrast on hover with default button colors\r\n\t&.hoverable {\r\n\t\t&:hover {\r\n\t\t\tbackground-color: $white;\r\n\t\t\tborder-color: $grey;\r\n\t\t\tcolor: $grey;\r\n\t\t}\r\n\t}\r\n\r\n\t// Default button outline\r\n\t&.outline {\r\n\t\tbackground-color: $white;\r\n\t\tborder-color: $grey;\r\n\t\tcolor: $grey;\r\n\t\t\r\n\t\t&.hoverable {\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground-color: $grey;\r\n\t\t\t\tcolor: $white;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Styles for each type of button\r\n\t@each $type in $btn-types {\r\n\t\t\r\n\t\t&.#{$type} {\r\n\t\t\t\r\n\t\t\t@if $type == \"full\" {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: .25em 0;\r\n\t\t\t} @else if $type == \"icon\" {\r\n\t\t\t\tpadding: .75em;\r\n\t\t\t} @else if $type == \"round\" {\r\n\t\t\t\tpadding: .75em;\r\n\t\t\t\tborder-radius: 100%;\r\n\t\t\t} @else if $type == \"long\" {\r\n\t\t\t\tpadding: .75em 5em;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t// Styles for each color of button\r\n\t@each $color, $value in $btn-colors {\r\n\t\t&.#{$color} {\r\n\t\t\tbackground-color: $value;\r\n\t\t\tborder-color: $value;\r\n\t\t\tcolor: $white;\r\n\t\t\t\r\n\t\t\t&.hoverable {\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground-color: $white;\r\n\t\t\t\t\tcolor: $value;\r\n\t\t\t\t\tborder-color: $value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t&.outline {\r\n\t\t\t\tbackground-color: $white;\r\n\t\t\t\tcolor: $value;\r\n\t\t\t\t\r\n\t\t\t\t&.hoverable {\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tbackground-color: $value;\r\n\t\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\t\tborder-color: $value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\t\r\n};\r\n\r\n.btn {\r\n\t@include btn;\r\n}",".tab {\r\n\tdisplay: block;\r\n\twidth: 300px;\r\n\tmargin: .5em;\r\n\tborder: 2px solid  #ddd;\r\n\tborder-radius: 4px;\r\n\ttext-decoration: none;\r\n\t&.card {\r\n\t\twidth: 200px;\r\n\t\t& > .tab__body {\r\n\t\t\tdisplay: block;\r\n\t\t\theight: auto;\r\n\t\t\t\r\n\t\t\t.tab__img {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: auto;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media screen and (min-width: 40em) {\r\n\t.tab.responsive {\r\n\t\twidth: 200px;\r\n\t\t& > .tab__body {\r\n\t\t\tdisplay: block;\r\n\t\t\theight: auto;\r\n\t\t\t\r\n\t\t\t.tab__img {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: auto;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n.tab__img {\r\n\theight: 80px;\r\n\tvertical-align: middle;\r\n}\r\n.tab__body {\r\n\tdisplay: flex;\r\n\tflex-flow: row nowrap;\r\n\tjustify-content: flex-start;\r\n\talign-items: flex-start;\r\n\tfont-family: sans-serif;\r\n\theight: 80px;\r\n\twidth: 100%;\r\n}\r\n.tab__text { \r\n\tpadding: .6em;\r\n\tfont-size: .8em;\r\n\theight: 100%;\r\n}\r\n.tab__heading { \r\n\tfont-size: 1.3em;\r\n\tcolor: #555;\r\n\tmargin-bottom: .25em;\r\n}\r\n.tab__description {\r\n\tfont-family: serif;\r\n\tpadding-left: .5em;\r\n\tborder-left: 1px solid #ddd;\r\n\tcolor: black\r\n}\r\n.tab__header {\r\n\tfont-family: sans-serif;\r\n\tpadding: .5em;\r\n\tbackground-color: #ddd;\r\n\t// color: white;\r\n}\r\n.tab__footer {\r\n\tpadding: .5em;\r\n\tborder-top: 1px solid #ddd;\r\n}","$modal-types: \"basic\", \"backdrop\";\r\n$modal-sizes: (\r\n  \"sml\": 300px,\r\n  \"mdm\": 600px,\r\n  \"lrg\": 900px\r\n);\r\n\r\n@mixin modal($type: \"basic\", $size: \"sml\") {\r\n  width: $size;\r\n  position: absolute;\r\n}\r\n\r\n.modal__container {\r\n\t@include flex(row, nowrap, center, center);\r\n  z-index: $z-5;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  padding: 1em;\r\n  background-color: $semiTrans;\r\n}\r\n\r\n.modal {\r\n  min-width: 300px;\r\n  width: 70vw;\r\n  max-width: 1000px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal__body {\r\n  padding: 1em;\r\n}\r\n\r\n.modal__header {\r\n  padding: 1em;\r\n  border-bottom: 0.5px solid $grey-150;\r\n  font-size: 20px;\r\n}\r\n.modal__footer {\r\n  padding: 1em;\r\n  border-top: 0.5px solid $grey-150;\r\n}\r\n.modal__img {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n  vertical-align: middle;\r\n}\r\n.modal__text {\r\n  margin-top: 1.8em;\r\n}\r\n.modal__text__heading {\r\n  font-size: 20px;\r\n  margin-bottom: 0.8em;\r\n}\r\n.modal__text__body {\r\n  p {\r\n    margin-bottom: 1em;\r\n  }\r\n}\r\n\r\n.modal__img__preview {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n\r\n@media screen and (min-width: 40em) {\r\n  .modal__body {\r\n    @include flex(row, nowrap, flex-start);\r\n  }\r\n\r\n  .modal__img {\r\n    max-width: 45%;\r\n    margin: 0;\r\n  }\r\n\r\n  .modal__text {\r\n    margin-top: 0;\r\n    margin-left: 2em;\r\n  }\r\n}\r\n","pre {\r\n  height: auto;\r\n  background-color: $black;\r\n}\r\n\r\ncode {\r\n  padding: 2em;\r\n  display: block;\r\n  color: $white;\r\n  overflow-x: scroll;\r\n  font-family: monospace;\r\n}\r\n\r\n.t { color: $red;}        /*css - id, decorator */\r\n.a { color: $yellow;}  /*css - property */\r\n.s { color: $white;}     /*css - value */\r\n.c { color: $grey-100;}    /*css - comment */\r\n.k { color: $blue;}    /*css - n/a*/\r\n.p { color: $blue;}   /*css - n/a*/\r\n.o { color: $yellow;}   /*css - n/a*/\r\n.n { color: $green;}     /*css - n/a*/\r\n.l { color: $blue;}      /*css - class */"]}