{"version":3,"sources":["base/_reset.scss","base/_variables.scss","utilities/_color.scss","utilities/_mixins.scss","utilities/_sizes.scss","layout/_grid.scss","components/_forms.scss","components/_buttons.scss","components/_panels.scss"],"names":[],"mappings":"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A;;AF/DhB;EEuDe;IAGY,oBJwElB,EInEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJyElB,EIpEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ0ElB,EIrEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ2ElB,EItEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ4ElB,EIvEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ6ElB,EIxEO,EAAA;;AF/DhB;EEuDe;IAGY,qBJ8EhB,EIzEK,EAAA;;AF/DhB;EEuDe;IAGY,qBJ+EhB,EI1EK,EAAA;;AF/DhB;EEuDe;IAGY,qBJgFhB,EI3EK,EAAA;;AF/DhB;EEuDe;IAGY,oBJqElB,EIhEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJsElB,EIjEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJuElB,EIlEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJwElB,EInEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJyElB,EIpEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ0ElB,EIrEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ2ElB,EItEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ4ElB,EIvEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ6ElB,EIxEO,EAAA;;AF/DhB;EEuDe;IAGY,qBJ8EhB,EIzEK,EAAA;;AF/DhB;EEuDe;IAGY,qBJ+EhB,EI1EK,EAAA;;AF/DhB;EEuDe;IAGY,qBJgFhB,EI3EK,EAAA;;AF/DhB;EEuDe;IAGY,oBJqElB,EIhEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJsElB,EIjEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJuElB,EIlEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJwElB,EInEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJyElB,EIpEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ0ElB,EIrEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ2ElB,EItEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ4ElB,EIvEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ6ElB,EIxEO,EAAA;;AF/DhB;EEuDe;IAGY,qBJ8EhB,EIzEK,EAAA;;AF/DhB;EEuDe;IAGY,qBJ+EhB,EI1EK,EAAA;;AF/DhB;EEuDe;IAGY,qBJgFhB,EI3EK,EAAA;;AF/DhB;EEuDe;IAGY,oBJqElB,EIhEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJsElB,EIjEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJuElB,EIlEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJwElB,EInEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJyElB,EIpEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ0ElB,EIrEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ2ElB,EItEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ4ElB,EIvEO,EAAA;;AF/DhB;EEuDe;IAGY,oBJ6ElB,EIxEO,EAAA;;AF/DhB;EEuDe;IAGY,qBJ8EhB,EIzEK,EAAA;;AF/DhB;EEuDe;IAGY,qBJ+EhB,EI1EK,EAAA;;AF/DhB;EEuDe;IAGY,qBJgFhB,EI3EK,EAAA;;AAMjB;EACI,eAAc;EACd,YAAW,EACd;;ACjFD;EACI,eAAc;EACd,YAAW;EACX,iBAAgB;EAChB,cAAa,EAChB;;AACD;EAAc,cAAa,EAAI;;AAC/B;EACI,mBLoFc,EK/EjB;EAND;IAIQ,eAAc,EACjB;;AAEL;EACI,mBL6Ec;EK5Ed,0BAAuB;EACvB,mBAAkB;EAClB,eAAc,EAQjB;EAZD;IAMQ,uBLIU,EKHb;EAPL;IASQ,eAAc;IACd,YAAW,EACd;;AAEL;EACI,mBLgEc;EK/Dd,gBAAe,EAClB;;AACD;EACI,YAAW;EACX,sBAAqB;EACrB,gBL0Dc;EKzDd,eLyDc;EKxDd,0BAAuB;EACvB,gBAAe;EACf,uBAAsB;EACtB,mBAAkB;EAClB,gDAAuC;EAAvC,wCAAuC,EAC1C;;AACD;EACI,mBAAkB;EAClB,mBAAkB,EAErB;;AACD;EACI,0BLvBc,EKwBjB;;ACiDD;EA/FC,eAAc;EACd,sBAAqB;EACrB,eAAc;EACd,sBAAqB;EACrB,YAAW;EACX,0BNeiB;EMdjB,4BNciB;EMbjB,iBAAgB;EAChB,wBNyEyB;EMxEzB,eN+Ee;EM9Ef,YNQiB;EMPjB,sBAAqB;EACrB,gBAAe;EJuCf,0CADiE;EACjE,kCADiE,EI+CjE;EAlFA;IACC,YAAW,EACX;EAIA;IACC,uBNJe;IMKf,sBNHe;IMIf,eNJe,EMKf;EAIF;IACC,uBNZgB;IMahB,sBNXgB;IMYhB,eNZgB,EMoBhB;IALC;MACC,0BNhBc;MMiBd,YNnBc,EMoBd;EAOF;IAGE,YAAW;IACX,eAAc;IACd,gBAAe,EAUhB;EAfD;IAOE,eAAc,EAQf;EAfD;IASE,eAAc;IACd,oBAAmB,EAKpB;EAfD;IAYE,mBAAkB,EAGnB;EAMD;IACC,0BN9Ce;IM+Cf,sBN/Ce;IMgDf,YNnDe,EMyEf;IAnBC;MACC,uBNvDa;MMwDb,eNrDa;MMsDb,sBNtDa,EMuDb;IAGF;MACC,uBN9Dc;MM+Dd,eN5Dc,EMqEd;MANC;QACC,0BNhEY;QMiEZ,YNpEY;QMqEZ,sBNlEY,EMmEZ;EAtBJ;IACC,0BN7Ce;IM8Cf,sBN9Ce;IM+Cf,YNnDe,EMyEf;IAnBC;MACC,uBNvDa;MMwDb,eNpDa;MMqDb,sBNrDa,EMsDb;IAGF;MACC,uBN9Dc;MM+Dd,eN3Dc,EMoEd;MANC;QACC,0BN/DY;QMgEZ,YNpEY;QMqEZ,sBNjEY,EMkEZ;EAtBJ;IACC,0BN7Ce;IM8Cf,sBN9Ce;IM+Cf,YNnDe,EMyEf;IAnBC;MACC,uBNvDa;MMwDb,eNpDa;MMqDb,sBNrDa,EMsDb;IAGF;MACC,uBN9Dc;MM+Dd,eN3Dc,EMoEd;MANC;QACC,0BN/DY;QMgEZ,YNpEY;QMqEZ,sBNjEY,EMkEZ;EAtBJ;IACC,0BN3Cc;IM4Cd,sBN5Cc;IM6Cd,YNnDe,EMyEf;IAnBC;MACC,uBNvDa;MMwDb,eNlDY;MMmDZ,sBNnDY,EMoDZ;IAGF;MACC,uBN9Dc;MM+Dd,eNzDa,EMkEb;MANC;QACC,0BN7DW;QM8DX,YNpEY;QMqEZ,sBN/DW,EMgEX;EAtBJ;IACC,0BN5CgB;IM6ChB,sBN7CgB;IM8ChB,YNnDe,EMyEf;IAnBC;MACC,uBNvDa;MMwDb,eNnDc;MMoDd,sBNpDc,EMqDd;IAGF;MACC,uBN9Dc;MM+Dd,eN1De,EMmEf;MANC;QACC,0BN9Da;QM+Db,YNpEY;QMqEZ,sBNhEa,EMiEb;;AJlFL;EKLD;IAEE,qBAAa;IAAb,qBAAa;IAAb,cAAa;IACb,+BAAmB;IAAnB,8BAAmB;QAAnB,wBAAmB;YAAnB,oBAAmB;IACnB,yBAAuB;QAAvB,sBAAuB;YAAvB,wBAAuB,EAKxB,EAAA;;ALJA;EKLD;IAOE,wBAA2B;QAA3B,qBAA2B;YAA3B,4BAA2B,EAE5B,EAAA;;AAYC;ELyJA,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,6BAAwB;EAAxB,8BAAwB;MAAxB,6BAAwB;UAAxB,yBAAwB;EACxB,iBAAgB;EAChB,sBAAqB;EACrB,YAAW;EACX,aAAY;EACZ,cAAa;EACb,iFAAkE;UAAlE,yEAAkE;EAClE,WAAU,EK/JT;ELLF;IKGC;MLmKC,iBAAgB,EKjKhB,EAAA;ELoKD;IACC,gBAAe;IACf,gBAAe;IACf,kBAAiB;IACjB,qBAAa;IAAb,qBAAa;IAAb,cAAa;IACb,yBAAuB;QAAvB,sBAAuB;YAAvB,wBAAuB;IACvB,0BAAmB;QAAnB,uBAAmB;YAAnB,oBAAmB;IACnB,iBAAgB,EAChB;;AK9KD;ELgLA,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,4CAAuC;EACvC,qBAAoB;EACpB,iBAAgB;EAChB,aAAY;EACZ,sBAAqB;EACrB,YAAW,EKpLV;ELlBF;IKgBC;MLwLC,aAAY;MACZ,cAAa;MACb,eAAc;MACd,oBAAmB;MACnB,iFAAkE;cAAlE,yEAAkE;MAClE,WAAU,EK3LV,EAAA;;AAGH;EACC,iBAAgB;EAChB,iBAAgB;EAChB,kBAAiB;EACjB,iBAAgB,EAShB;ELlCA;IKqBD;MAME,gBAAe;MACf,gBAAe;MACf,kBAAiB;MACjB,qBAAa;MAAb,qBAAa;MAAb,cAAa;MACb,yBAAuB;UAAvB,sBAAuB;cAAvB,wBAAuB;MACvB,0BAAmB;UAAnB,uBAAmB;cAAnB,oBAAmB,EAEpB,EAAA;;AACD;EACC,YAAW;EACX,aAAY;EACZ,eAAc,EACd;;AACD;EAAa,cAAa,EAAG;;AAC7B;EACC,kBAAiB,EAIjB;EL9CA;IKyCD;MAGE,kBAAiB,EAElB,EAAA;;AACD;EACC,wBP2ByB;EO1BzB,mBPkCiB;EOjCjB,iBAAgB;EAChB,cAAa;EACb,oBAAmB,EACnB;;AACD;EACC,wBPoByB;EOnBzB,iBPyBe;EOxBf,cAAa,EACb;;AACD;EACC,oBAAmB;EACnB,eAAc,EACd","file":"../../main.css","sourcesContent":["*,\r\n*::before,\r\n*::after {\r\n\tbox-sizing: border-box;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\nbody {\r\n\tfont-family: $main-font;\r\n\tfont-weight: 400;\r\n\tfont-size: 16px;\r\n\tline-height: 1.7;\r\n}","// Variables\r\n//\r\n// Feel free to add your own variables to this \r\n// file to accomodate the styling needs of \r\n// your project\r\n// \r\n// It is recommended that you stay clear of some\r\n// variables and lists so that css-patterns basic\r\n// functional needs can be met\r\n\r\n// Colors\r\n\r\n// css patterns basic colors\r\n// \r\n// feel free to add or change the values here\r\n// if youw ant your own colors to effect css-patterns\r\n// classes it is recommended you add them to the \r\n// '$colors' list \r\n// *WARNING*: Other lists are dependent on this list\r\n// Button Colors are dependent\r\n\r\n$white:    \t\t\t#fff;\r\n$black:    \t\t\t#000;\r\n$grey: \t\t\t\t#697479;\r\n$blue: \t\t\t\t#084887;\r\n$green: \t\t\t#56BF00;\r\n$yellow: \t\t\t#FFCC42;\r\n$red: \t\t\t\t#D33115;\r\n$purple:\t\t\t#5F0F40;\r\n\r\n// Add your colors so you can use the\r\n// '.bg' and '.txt' classes\r\n\r\n$colors: (\r\n\t\"grey\": \t$grey,\r\n\t\"blue\": \t$blue,\r\n\t\"green\": \t$green,\r\n\t\"yellow\":\t$yellow,\r\n\t\"red\":\t\t$red,\r\n\t\"purple\":   $purple,\r\n\t\"white\":    $white,\r\n);\r\n\r\n// Button colors\r\n// The `$colors` map can be used to generate \r\n// button variations or a this default button \r\n// map can be used to \r\n\r\n$btn-colors: (\r\n\t\"primary\": \t$blue,\r\n\t\"secondary\":$green,\r\n\t\"success\": \t$green,\r\n\t\"alert\": \t$red,\r\n\t\"warning\": \t$yellow\r\n);\r\n\r\n// Not a requirement to have these\r\n// greys but they are here if you need them\r\n\r\n$grey-100: \t\t#C3C7C9;\r\n$grey-200: \t\t#91999D;\r\n$grey-300: \t\t#697479;\r\n$grey-400: \t\t#5A676C;\r\n$grey-500: \t\t#4A585E;\r\n\r\n// This list can be deleted it is not used\r\n// in any other area of the library\r\n\r\n$grey-scale: (\r\n\t\"100\": \t\t\t$grey-100,\r\n\t\"200\": \t\t\t$grey-200,\r\n\t\"300\": \t\t\t$grey-300,\r\n\t\"400\": \t\t\t$grey-400,\r\n\t\"500\": \t\t\t$grey-500\r\n);\r\n\r\n\r\n\r\n// Typography\r\n//\r\n// Add your own fonts or alter\r\n// these pre-assigned ones to fit \r\n// your application needs\r\n\r\n$main-font:   \t\tsans-serif;\r\n$accent: \t\t\tserif;\r\n$document:\t\t\tserif;\r\n\r\n// Recommended sizes\r\n$tiny: \t\t\t\t.75em;\r\n$sml:  \t\t\t\t.90em;\r\n$initial: \t\t\t1em;\r\n$main: \t\t\t\t1.125em;\r\n$mid:  \t\t\t\t1.25em;\r\n$mdm:  \t\t\t\t1.6em;\r\n$mod:  \t\t\t\t1.9em;\r\n$lrg:  \t\t\t\t2.5em;\r\n\r\n$sizes: (\r\n\t\"tiny\": \t$tiny,\r\n\t\"sml\": \t\t$sml,\r\n\t\"initial\": \t$initial,\r\n\t\"main\": \t$main,\r\n\t\"mid\": \t\t$mid,\r\n\t\"mdm\": \t\t$mdm,\r\n\t\"mod\": \t\t$mod,\r\n\t\"lrg\": \t\t$lrg,\r\n);\r\n\r\n\r\n\r\n// Border Radius\r\n\r\n$br: \t .25em;\r\n\r\n\r\n\r\n// Breakpoints\r\n\r\n$bp-tiny: 40em;\r\n$bp-sml:  48em;\r\n$bp-mdm:  62.5em;\r\n$bp-lrg:  75em;\r\n\r\n$break-points: (\r\n\t\"tiny\": $bp-tiny,\r\n\t\"sml\":  $bp-sml,\r\n\t\"mdm\":  $bp-mdm,\r\n\t\"lrg\":  $bp-lrg\r\n);\r\n\r\n\r\n\r\n// Grid Variables -- change at your own risk --\r\n\r\n$columns: (\r\n    \"1\": 1,\r\n    \"2\": 2,\r\n    \"3\": 3,\r\n    \"4\": 4,\r\n    \"5\": 5,\r\n    \"6\": 6,\r\n    \"7\": 7,\r\n    \"8\": 8,\r\n    \"9\": 9,\r\n    \"10\": 10,\r\n    \"11\": 11,\r\n    \"12\": 12,\r\n);\r\n\r\n$grid-sizes: (\r\n    \"base\": \"no bp\",\r\n    \"tiny\": $bp-tiny,\r\n    \"sml\":  $bp-sml,\r\n    \"mdm\":  $bp-mdm,\r\n    \"lrg\":  $bp-lrg,\r\n);\r\n\r\n$limited-grid-size: 75em;\r\n$padded-grid-padding: .75em;\r\n\r\n// button types\r\n\r\n$btn-types: \"full\" \"icon\" \"round\" \"long\";\r\n\r\n// Panel types\r\n\r\n$panel-types: \"basic\" \"responsive\";","// Premade classes for color\r\n//\r\n// It is best to assign color to an elements\r\n// main class instead of adding a large amount\r\n// of classes to the html element code\r\n// these classes can help you prototype look\r\n// and feel fast. To add your own style guide\r\n// colors to these classes add them to the \r\n// _variables.scss partial under the \r\n// colors list\r\n\r\n@each $color, $value in $colors {\r\n\r\n\t// Background Color\r\n\r\n\t.bg-#{$color} {\r\n\t\t@include background($value);\r\n\t}\r\n\r\n\t// Text color\r\n\r\n\t.txt-#{$color} {\r\n\t\tcolor: $value;\r\n\t}\r\n}\r\n","// Media Query Breakpoints\r\n\r\n// Generic custom breakpoint mixin\r\n// \r\n// Makes life really easy but it does spam\r\n// media queries in the library which adds to\r\n// dozens if not hundreds of lines of repeated code\r\n\r\n@mixin bp($bp) {\r\n\t@media only screen and (min-width: $bp) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n\r\n// Specific breakpoint mixins\r\n//\r\n// Shorthand for the above mixin\r\n// does not solve the problem of spamming \r\n// media queries\r\n\r\n@mixin bp-tiny ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-tiny) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-sml ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-sml) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-mdm ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-mdm) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin bp-lrg ($minOrMax: \"min\") {\r\n\t@media screen and (#{$minOrMax}-width: $bp-lrg) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// transitions\r\n//\r\n// Customizable transition mixin\r\n// by specifying the effect of the transition\r\n// it may improve performace in css\r\n// the preformance improvement may not make \r\n// a difference though\r\n\r\n@mixin transition($effect: all, $time: 300ms, $easing: ease-in-out) {\r\n\ttransition: $effect $time $easing;\r\n}\r\n\r\n// background colors\r\n// set the background and hover colors of an element \r\n// in one mixin\r\n@mixin background($color, $hover: \"null\") {\r\n\t\r\n\tbackground-color: $color;\r\n\t\r\n\t@if $hover != \"null\" {\r\n\t\t\r\n\t\t@include transition(background-color);\r\n\t\t\r\n\t\t&:hover {\r\n\t\t\tbackground-color: $hover;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Flex mixins\r\n//\r\n// Works for most situations for using flexbox\r\n\r\n@mixin flex ($orientation: row, \r\n\t\t\t $wrap: nowrap,\r\n\t\t\t $justify: space-around, \r\n\t\t\t $align: flex-start) {\r\n\tdisplay: flex;\r\n\tflex-flow: $orientation $wrap;\r\n\tjustify-content: $justify;\r\n\talign-items: $align;\r\n}\r\n\r\n\r\n\r\n// Css Grid Mixins\r\n//\r\n// Standard grid mixins used in all of css-pattern\r\n// grid classes\r\n\r\n@mixin grid($type: \"grid\", \r\n\t\t\t$limit: $limited-grid-size, \r\n\t\t\t$pad: $padded-grid-padding) {\r\n    display: grid;\r\n    grid-template-columns: repeat(12, 1fr);\r\n\tgrid-auto-rows: minmax(50px, auto);\r\n    margin: 0 auto;\r\n    @if $type == \"grid--padded\" {\r\n        grid-gap: $pad;\r\n    } @else if $type == \"grid--limited\" {\r\n        max-width: $limit;\r\n    } @else if $type == \"grid--limited-padded\" {\r\n        grid-gap: $pad;\r\n        max-width: $limit;\r\n    }\r\n}\r\n\r\n// Extend css-patterns grid \r\n\r\n// Use this mixin to create your own custom\r\n// grid classes\r\n// *Grid columns will always have equal widths \r\n// filling the space given to them\r\n\r\n@mixin custom-grid($type: \"grid\", \r\n\t\t\t\t   $columns: 12, \r\n\t\t\t\t   $limit: $limited-grid-size, \r\n\t\t\t\t   $pad: $padded-grid-padding) {\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat($columns, 1fr);\r\n\tgrid-auto-rows: minmax(50px, auto);\r\n\tmargin: 0 auto;\r\n\t@if $type == \"grid--padded\" {\r\n\t\tgrid-gap: $pad;\r\n\t} @else if $type == \"grid--limited\" {\r\n\t\tmax-width: $limit;\r\n\t} @else if $type == \"grid--limited-padded\" {\r\n\t\tgrid-gap: $pad;\r\n\t\tmax-width: $limit;\r\n\t}\t\r\n}\r\n\r\n\r\n\r\n// Image mixins and extend templates\r\n// \r\n// Since we have mixins that don't require\r\n// any perameters it may be more preformant\r\n// to user '@extend' instead on '@include'\r\n// for these one off mixins. Compiled css\r\n// may be lessened significantly if '@extend'\r\n// is used on classes requiring the styles\r\n\r\n// '@extend' templates\r\n\r\n%img {\r\n\tvertical-align: center;\r\n\tborder: 0;\r\n}\r\n\r\n%img--responsive {\r\n\tmax-width: 100%;\r\n\t@extend %img;\r\n}\r\n\r\n// Image mixins\r\n\r\n@mixin img() {\r\n\tvertical-align: center;\r\n\tborder: 0;\r\n}\r\n\r\n@mixin img--responsive($max-width: 100%) {\r\n\tmax-width: $max-width;\r\n\t@include img;\r\n}\r\n\r\n\r\n\r\n// Panel Mixins\r\n\r\n@mixin panel($type) {\r\n\t@if $type == \"basic\" {\r\n\t\tdisplay: flex;\r\n\t\tflex-flow: column nowrap;\r\n\t\tmargin: 1em auto;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #000;\r\n\t\twidth: 230px;\r\n\t\theight: 300px;\r\n\t\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 3px rgba(0,0,0,0.15);\r\n\t\tpadding: 0;\r\n\t\t@include bp-tiny() {\r\n\t\t\tmargin: 1em .5em;\r\n\t\t}\r\n\r\n\t\t& > .panel--img--wrap {\r\n\t\t\tmin-width: 100%;\r\n\t\t\tmax-width: 100%;\r\n\t\t\tmax-height: 130px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t} @else if $type == \"responsive\" {\r\n\t\tdisplay: flex;\r\n\t\tborder-bottom: 2px solid rgba(0,0,0,.5);\r\n\t\tpadding-bottom: .5em;\r\n\t\tmargin: 1em .5em;\r\n\t\theight: auto;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #000;\r\n\t\t@include bp ($bp-tiny) {\r\n\t\t\twidth: 230px;\r\n\t\t\theight: 300px;\r\n\t\t\tdisplay: block;\r\n\t\t\tborder-bottom: none;\r\n\t\t\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 3px rgba(0,0,0,0.15);\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t}\r\n}","// font size class generation\r\n//\r\n// As always it is best to assign the \r\n// size of your text in the elements\r\n// main class but if you need to quickly\r\n// prototype then having classes\r\n// for text size may come in handy\r\n\r\n@each $size, $value in $sizes {\r\n\t.#{$size} {\r\n\t\tfont-size: $value ;\r\n\t}\r\n}","// the grid class and its variants can work as individual rows or if columns are configured\r\n// in such a way one grid can represent multiple rows\r\n\r\n.grid { @include grid;}\r\n@each $size, $break in $break-points {\r\n    .grid--#{$size} {\r\n        @include bp($break) {\r\n            @include grid; \r\n        }\r\n    }\r\n}\r\n.grid--padded { @include grid(\"grid--padded\");}\r\n@each $size, $break in $break-points {\r\n    .grid--padded--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--padded\"); \r\n        }\r\n    }\r\n}\r\n.grid--limited { @include grid(\"grid--limited\");}\r\n@each $size, $break in $break-points {\r\n    .grid--limited--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--limited\"); \r\n        }\r\n    }\r\n}\r\n.grid--limited-padded { @include grid(\"grid--limited-padded\");}\r\n@each $size, $break in $break-points {\r\n    .grid--limited-padded--#{$size} {\r\n        @include bp($break) {\r\n            @include grid(\"grid--limited-padded\");\r\n        }\r\n    }\r\n}\r\n\r\n.grid__column {\r\n    \r\n    // This is a responsive option for creating grid columns\r\n    // Syntax: class=\"grid__column--3\"\r\n    @each $column, $number in $columns {\r\n        &--#{$column} {\r\n            grid-column: span 12;\r\n            @include bp($bp-tiny) {\r\n                @if $number <= 6 {\r\n                    grid-column: span 6;\r\n                }\r\n            }\r\n            @include bp($bp-sml) {\r\n                \r\n            }\r\n            @include bp-mdm() {\r\n                grid-column: span $number;\r\n            }\r\n        }\r\n    }\r\n\r\n    // This is a non-responsive option for creating grid columns\r\n    // However by adding multiple classes the exact sizes can be applied at each\r\n    // breakpoint making it responsive exactly to your needs\r\n    // Syntax: class=\"grid__column--base--12 grid__column--tiny--6 grid__column--mdm--3\"\r\n    @each $size, $bp in $grid-sizes {\r\n        &--#{$size} {\r\n            @each $column, $number in $columns {\r\n                &--#{$column} {\r\n                    @if $size != \"base\" {\r\n                        @include bp($bp) {\r\n                            grid-column: span $number;\r\n                        }\r\n                    } @else {\r\n                        grid-column: span $number;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.grid__image {\r\n    display: block;\r\n    width: 100%;\r\n}",".form {\r\n    display: block;\r\n    width: 100%;\r\n    min-height: 50px;\r\n    padding: 25px;\r\n}\r\n.form__pair { margin: 1em 0; }\r\n.form__label { \r\n    font-size: $main;\r\n\r\n    &.top {\r\n        display: block;\r\n    }\r\n}\r\n.form__field {\r\n    font-size: $main;\r\n    border: 1px $grey solid;\r\n    border-radius: 3px;\r\n    padding: .35em;\r\n    &:focus {\r\n        outline-color: $blue;\r\n    }\r\n    &.full {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n}\r\n.form__label--checkbox {\r\n    font-size: $main;\r\n    cursor: pointer;\r\n}\r\n.form__label--checkbox::after {\r\n    content: '';\r\n    display: inline-block;\r\n    height: $main;\r\n    width: $main;\r\n    border: $blue 1px solid;\r\n    margin: 0 .75em;\r\n    vertical-align: middle;\r\n    border-radius: 3px;\r\n    transition: background-color 200ms ease;\r\n}\r\n.form__field--checkbox { \r\n    visibility: hidden;\r\n    position: absolute;\r\n    // find a good place to hide this\r\n}\r\n.form__field--checkbox:checked + .form__label--checkbox::after {\r\n    background-color: $green;\r\n}\r\n\r\n","// button\r\n\r\n@mixin btn() {\r\n\tmargin: .1em 0;\r\n\ttext-decoration: none;\r\n\tline-height: 1;\r\n\tpadding: .75em 1.75em;\r\n\twidth: auto;\r\n\tbackground-color: $grey;\r\n\tborder: .1em solid $grey;\r\n\tfont-weight: 700;\r\n\tfont-family: $main-font;\r\n\tfont-size: $initial;\r\n\tcolor: $white;\r\n\tdisplay: inline-block;\r\n\tcursor: pointer;\r\n\t@include transition(all, 200ms);\r\n\t\r\n\t&:hover {\r\n\t\topacity: .7;\r\n\t}\r\n\r\n\t// More contrast on hover with default button colors\r\n\t&.hoverable {\r\n\t\t&:hover {\r\n\t\t\tbackground-color: $white;\r\n\t\t\tborder-color: $grey;\r\n\t\t\tcolor: $grey;\r\n\t\t}\r\n\t}\r\n\r\n\t// Default button outline\r\n\t&.outline {\r\n\t\tbackground-color: $white;\r\n\t\tborder-color: $grey;\r\n\t\tcolor: $grey;\r\n\t\t\r\n\t\t&.hoverable {\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground-color: $grey;\r\n\t\t\t\tcolor: $white;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Styles for each type of button\r\n\t@each $type in $btn-types {\r\n\t\t\r\n\t\t&.#{$type} {\r\n\t\t\t\r\n\t\t\t@if $type == \"full\" {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: .25em 0;\r\n\t\t\t} @else if $type == \"icon\" {\r\n\t\t\t\tpadding: .75em;\r\n\t\t\t} @else if $type == \"round\" {\r\n\t\t\t\tpadding: .75em;\r\n\t\t\t\tborder-radius: 100%;\r\n\t\t\t} @else if $type == \"long\" {\r\n\t\t\t\tpadding: .75em 5em;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t// Styles for each color of button\r\n\t@each $color, $value in $btn-colors {\r\n\t\t&.#{$color} {\r\n\t\t\tbackground-color: $value;\r\n\t\t\tborder-color: $value;\r\n\t\t\tcolor: $white;\r\n\t\t\t\r\n\t\t\t&.hoverable {\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground-color: $white;\r\n\t\t\t\t\tcolor: $value;\r\n\t\t\t\t\tborder-color: $value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t&.outline {\r\n\t\t\t\tbackground-color: $white;\r\n\t\t\t\tcolor: $value;\r\n\t\t\t\t\r\n\t\t\t\t&.hoverable {\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tbackground-color: $value;\r\n\t\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\t\tborder-color: $value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\t\r\n};\r\n\r\n.btn {\r\n\t@include btn;\r\n}","// A panel grid is a containers that\r\n// governs the layout of multiple panels \r\n// in a row\r\n\r\n.panel__grid {\r\n\t@include bp($bp-tiny) {\r\n\t\tdisplay: flex; \r\n\t\tflex-flow: row wrap;\r\n\t\tjustify-content: center;\r\n\t}\t\r\n\t@include bp($bp-lrg) {\r\n\t\tjustify-content: flex-start;\r\n\t}\r\n}\r\n\r\n// Panel Description\r\n//\r\n// Panel wrapper - can be any element but most comonly should use anchors, figures, or divs\r\n// - Panel image wrapper\r\n// -- panel image\r\n// - Panel caption(text)\r\n// -- Any kind of text\r\n\r\n.panel {\r\n\t@each $type in $panel-types {\r\n\t\t&--#{$type} {\r\n\t\t\t@include panel($type);\r\n\t\t}\r\n\t}\r\n}\r\n.panel__img--wrap {\r\n\tmin-width: 125px; \r\n\tmax-width: 125px;\r\n\tmax-height: 125px;\r\n\toverflow: hidden;\r\n\t@include bp ($bp-tiny) {\r\n\t\tmin-width: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tmax-height: 130px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n}\r\n.panel__img {\r\n\twidth: 100%;\r\n\theight: auto;\r\n\tdisplay: block;\r\n}\r\n.panel__tag {display: none;}\r\n.panel__caption {\r\n\tpadding-left: 1em;\r\n\t@include bp($bp-tiny) {\r\n\t\tpadding: 1em .5em;\r\n\t}\r\n}\r\n.panel__title {\r\n\tfont-family: $main-font;\r\n\tfont-size: $main;\r\n\tfont-weight: 500;\r\n\tmargin-top: 0;\r\n\tmargin-bottom: .5em;\r\n}\r\n.panel__author {\r\n\tfont-family: $main-font;\r\n\tfont-size: $sml;\r\n\tmargin-top: 0;\r\n}\r\n.panel__rating {\r\n\tmargin-bottom: .5em;\r\n\tdisplay: block;\r\n}"]}