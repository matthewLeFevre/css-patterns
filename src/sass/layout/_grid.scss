// the grid class and its variants can work as individual rows or if columns are configured
// in such a way one grid can represent multiple rows
.grid { @include grid; }
.grid--padded { @include grid("grid--padded"); }
.grid--limited { @include grid("grid--limited"); }
.grid--limited-padded { @include grid("grid--limited-padded"); }

.grid__column {
    
    // This is a responsive option for creating grid columns
    // Syntax: class="grid__column--3"
    @each $column, $number in $columns {
        &#{$column} {
            grid-column: span 12;
            @include bp($bp-tiny) {
                @if $number <= 6 {
                    grid-column: span 6;
                }
            }
            @include bp($bp-sml) {
                
            }
            @include bp-mdm() {
                grid-column: span $number;
            }
        }
    }

    // This is a non-responsive option for creating frid columns
    // However by adding multiple classes the exact sizes can be applied at each
    // breakpoint making it responsive exactly to your needs
    // Syntax: class="grid__column--12--base grid__column--6--tiny grid__column--3--mdm"
    @each $size, $bp in $grid-sizes {
        &#{$size} {
            @each $column, $number in $columns {
                &#{$column} {
                    @if $size != "--base" {
                        @include bp($bp) {
                            grid-column: span $number;
                        }
                    } @else {
                        grid-column: span $number;
                    }
                }
            }
        }
    }
}

.grid--element {
    display: grid;
    height: 100%;
    width: 100%;
    grid-template-columns: repeat(12, 1fr);
    grid-auto-rows: min-max(25px, auto);
}

.grid__image-container {
    overflow: hidden;
    min-height: 200px;
    max-height: 300px;
    display: flex;
    justify-content: center;
    align-items: center;
    
    @include bp($bp-tiny) {
        height: 210px;
    }

    @include bp($bp-sml) {
        height: 150px;
    }

    @include bp($bp-mdm) {
        height: 200px;
    }

    @include bp($bp-lrg) {
        height: 250px;
    }
}

.grid__image {
    display: block;
    width: 100%;
}

.grid--element__column {
    @each $column, $number in $columns {
        &#{$column} {
            grid-column: span $number;
        }
    }
}

.divider {
    margin: .5em;
}


