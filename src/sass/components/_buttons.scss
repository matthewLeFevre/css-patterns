// btn long icon full outline

$btn-types: "full" "icon" "round" "long";

// button

@mixin btn() {
	margin: .1em 0;
	text-decoration: none;
	line-height: 1;
	padding: .75em 1.75em;
	width: auto;
	background-color: $grey;
	border: .1em solid $grey;
	font-weight: 700;
	font-family: $main-font;
	font-size: $initial;
	color: $white;
	display: inline-block;
	cursor: pointer;
	@include transition(all, 200ms);
	
	&.hoverable {
		&:hover {
			background-color: $white;
			border-color: $grey;
			color: $grey;
		}
	}

	&:hover {
		opacity: .7;
	}
	
	&.outline {
		background-color: $white;
		border-color: $grey;
		color: $grey;
		
		&.hoverable {
			&:hover {
				background-color: $grey;
				color: $white;
			}
		}
	}
	
	// &.block {
	// 	display: block;
	// 	margin: .25em 0;
	// 	width: auto;
	// 	margin-left: auto;
	// }
	
	@each $type in $btn-types {
		
		&.#{$type} {
			
			@if $type == "full" {
				width: 100%;
				display: block;
				margin: .25em 0;
			} @else if $type == "icon" {
				padding: .75em;
			} @else if $type == "round" {
				padding: .75em;
				border-radius: 100%;
			} @else if $type == "long" {
				padding: .75em 5em;
			}
			
		}

	}
	
	@each $color, $value in $colors {
		&.#{$color} {
			background-color: $value;
			border-color: $value;
			color: $white;
			
			&.hoverable {
				&:hover {
					background-color: $white;
					color: $value;
					border-color: $value;
				}
			}
			
			&.outline {
				background-color: $white;
				color: $value;
				
				&.hoverable {
					&:hover {
						background-color: $value;
						color: $white;
						border-color: $value;
					}
				}
			}	
		}
	}
	
	@each $alert, $value in $alerts {
		&.#{$alert} {
			background-color: $value;
			border-color: $value;
			color: $white;
		}
	}
	
};

.btn {
	@include btn;
}